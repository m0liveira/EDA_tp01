<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="vehicles_8c" kind="file" language="C++">
    <compoundname>vehicles.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="global_8h" local="yes">../headers/global.h</includes>
    <includes refid="vehicles_8h" local="yes">../headers/vehicles.h</includes>
    <incdepgraph>
      <node id="4">
        <label>../headers/global.h</label>
        <link refid="global_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../headers/vehicles.h</label>
        <link refid="vehicles_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>sources/vehicles.c</label>
        <link refid="vehicles_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="vehicles_8c_1aeed9c0434f4d057d662880ad78fd82f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isUnique</definition>
        <argsstring>(Vehicle *startEntry, int id)</argsstring>
        <name>isUnique</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Check vehicle ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks if the ID is dupped</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 or 0 as true or false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="15" column="5" bodyfile="sources/vehicles.c" bodystart="15" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1a95c50728b4b1feefc4267c588c6f4122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
        <definition>Vehicle * addVehicles</definition>
        <argsstring>(Vehicle *startEntry, int id, float batteryCapacity, int currentBattery, float autonomy, float price, char brand[], char model[], char gpsTracker[])</argsstring>
        <name>addVehicles</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>float</type>
          <declname>batteryCapacity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>currentBattery</declname>
        </param>
        <param>
          <type>float</type>
          <declname>autonomy</declname>
        </param>
        <param>
          <type>float</type>
          <declname>price</declname>
        </param>
        <param>
          <type>char</type>
          <declname>brand</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>model</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>gpsTracker</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Add vehicle. </para>
        </briefdescription>
        <detaileddescription>
<para>Adds a new vehicle entry into a linked list</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>id</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>float</parametername>
</parameternamelist>
<parameterdescription>
<para>batteryCapacity</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>currentBattery</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>float</parametername>
</parameternamelist>
<parameterdescription>
<para>autonomy</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>float</parametername>
</parameternamelist>
<parameterdescription>
<para>price</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>brand[]</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>model[]</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>gpsTracker[] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Added vehicle </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="34" column="9" bodyfile="sources/vehicles.c" bodystart="34" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1a174dc3757d7fd308d7824673d9a3849d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void listVehicles</definition>
        <argsstring>(Vehicle *startEntry)</argsstring>
        <name>listVehicles</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <briefdescription>
<para>List vehicles. </para>
        </briefdescription>
        <detaileddescription>
<para>Outputs all vehicles</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="64" column="6" bodyfile="sources/vehicles.c" bodystart="64" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1a939e86a429faf7c0c7bf1647c19dd517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
        <definition>Vehicle * deleteVehicle</definition>
        <argsstring>(Vehicle *startEntry, int id)</argsstring>
        <name>deleteVehicle</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Delete vehicle. </para>
        </briefdescription>
        <detaileddescription>
<para>Deletes a vehicle entry from the linked list</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vehicles </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="95" column="9" bodyfile="sources/vehicles.c" bodystart="95" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1ab7ce1ccb88e5738a39431b0b7cd64f8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
        <definition>Vehicle * editVehicle</definition>
        <argsstring>(Vehicle *startEntry, int id, int currentBattery, char gpsTracker[])</argsstring>
        <name>editVehicle</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>currentBattery</declname>
        </param>
        <param>
          <type>char</type>
          <declname>gpsTracker</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Update vehicle. </para>
        </briefdescription>
        <detaileddescription>
<para>Updates a specified vehicle entry from the linked list</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>id</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>currentBattery</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>gpsTracker[] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vehicles </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="133" column="9" bodyfile="sources/vehicles.c" bodystart="133" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1a32c74cac04f5218a5d7eb479fb262f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int saveVehiclesOnDatabase</definition>
        <argsstring>(Vehicle *startEntry)</argsstring>
        <name>saveVehiclesOnDatabase</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <briefdescription>
<para>Save vehicle on database. </para>
        </briefdescription>
        <detaileddescription>
<para>Saves vehicles entrys into a database</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 or 0 as true or false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="165" column="5" bodyfile="sources/vehicles.c" bodystart="165" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1a5dae4b1b97ace920cd7262c20c3a9a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int saveVehiclesOnBinaryDatabase</definition>
        <argsstring>(Vehicle *startEntry)</argsstring>
        <name>saveVehiclesOnBinaryDatabase</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <briefdescription>
<para>Save vehicle on binary database. </para>
        </briefdescription>
        <detaileddescription>
<para>Saves vehicles entrys into a binary database</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 or 0 as true or false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="193" column="5" bodyfile="sources/vehicles.c" bodystart="193" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1a369c63f2109ee2575ac9d4417b3c40ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
        <definition>Vehicle * getVehiclesFromDatabase</definition>
        <argsstring>()</argsstring>
        <name>getVehiclesFromDatabase</name>
        <briefdescription>
<para>Get vehicles. </para>
        </briefdescription>
        <detaileddescription>
<para>Gets all vehicles from a database</para>
<para><simplesect kind="return"><para>vehicles </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="227" column="9" bodyfile="sources/vehicles.c" bodystart="227" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1a97e391b18841c2f4a9cd3fd39807d16a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void listVehiclesByAutnonomy</definition>
        <argsstring>(Vehicle *startEntry)</argsstring>
        <name>listVehiclesByAutnonomy</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <briefdescription>
<para>List vehicles by autonomy. </para>
        </briefdescription>
        <detaileddescription>
<para>Outputs vehicles sorted by autonomy</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="263" column="6" bodyfile="sources/vehicles.c" bodystart="263" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1a9687b1204b533bfc36593703b2fd1785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void listVehiclesByGPS</definition>
        <argsstring>(Vehicle *startEntry, char location[])</argsstring>
        <name>listVehiclesByGPS</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <param>
          <type>char</type>
          <declname>location</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>List vehicles by GPS. </para>
        </briefdescription>
        <detaileddescription>
<para>Outputs vehicles in a specific GPS location</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>location[] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="314" column="6" bodyfile="sources/vehicles.c" bodystart="314" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1a8c8d5c19871b6a26547394e61e49264f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void getVehicleByID</definition>
        <argsstring>(Vehicle *startEntry, int id)</argsstring>
        <name>getVehicleByID</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Get vehicle by ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Stores a specific vehicle data in a struct</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="346" column="6" bodyfile="sources/vehicles.c" bodystart="346" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1ad531955832370c9ea477a920316b6442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vehicleExists</definition>
        <argsstring>(Vehicle *startEntry, int id)</argsstring>
        <name>vehicleExists</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Vehicle exist. </para>
        </briefdescription>
        <detaileddescription>
<para>Checks if a specified vehicle exists at the linked list</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 or 0 as true or false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="374" column="5" bodyfile="sources/vehicles.c" bodystart="374" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="vehicles_8c_1a88357fa8f47cb44df355643537f88141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
        <definition>Vehicle * rechargeVehicles</definition>
        <argsstring>(Vehicle *startEntry)</argsstring>
        <name>rechargeVehicles</name>
        <param>
          <type><ref refid="vehicles_8h_1a882096ca2318e46deaab7178285cb883" kindref="member">Vehicle</ref> *</type>
          <declname>startEntry</declname>
        </param>
        <briefdescription>
<para>Recharge vehicles. </para>
        </briefdescription>
        <detaileddescription>
<para>Recharges all vehicles stored in the linked list</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Vehicle</parametername>
</parameternamelist>
<parameterdescription>
<para>*startEntry </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vehicles </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sources/vehicles.c" line="393" column="9" bodyfile="sources/vehicles.c" bodystart="393" bodyend="409"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../headers/global.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../headers/vehicles.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="vehicles_8h_1aeed9c0434f4d057d662880ad78fd82f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vehicles_8c_1aeed9c0434f4d057d662880ad78fd82f0" kindref="member">isUnique</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(startEntry<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startEntry-&gt;<ref refid="struct_vehicle_list_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref><sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startEntry<sp/>=<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="vehicles_8h_1a95c50728b4b1feefc4267c588c6f4122" refkind="member"><highlight class="normal"><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*<ref refid="vehicles_8c_1a95c50728b4b1feefc4267c588c6f4122" kindref="member">addVehicles</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>batteryCapacity,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentBattery,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>autonomy,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>price,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>brand[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>model[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>gpsTracker[]){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="vehicles_8c_1aeed9c0434f4d057d662880ad78fd82f0" kindref="member">isUnique</ref>(startEntry,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nErro:<sp/>Este<sp/>ID<sp/>ja<sp/>foi<sp/>registado!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(startEntry);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*newEntry<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_vehicle_list" kindref="compound">VehicleList</ref>));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newEntry<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntry-&gt;<ref refid="struct_vehicle_list_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref><sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntry-&gt;<ref refid="struct_vehicle_list_1a43a6e4be8d45c1a00a55a11d095c0399" kindref="member">batteryCapacity</ref><sp/>=<sp/>batteryCapacity;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntry-&gt;<ref refid="struct_vehicle_list_1aa0fb27feb593e8a6f2c20fa92b2466cf" kindref="member">currentBattery</ref><sp/>=<sp/>currentBattery;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntry-&gt;<ref refid="struct_vehicle_list_1a83cda76233a2b02dcc2b3707fa58e4e8" kindref="member">autonomy</ref><sp/>=<sp/>autonomy;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntry-&gt;<ref refid="struct_vehicle_list_1a500426aec97889b7572f25ae45c06a8d" kindref="member">price</ref><sp/>=<sp/>price;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(newEntry-&gt;<ref refid="struct_vehicle_list_1a19d9312fa6559481585c37eec00fdccf" kindref="member">brand</ref>,<sp/>brand);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(newEntry-&gt;<ref refid="struct_vehicle_list_1a407e8645b05b8866c6aae96539051b4d" kindref="member">model</ref>,<sp/>model);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(newEntry-&gt;<ref refid="struct_vehicle_list_1a28e6925eca319a182388b4d560d9026b" kindref="member">gpsTracker</ref>,<sp/>gpsTracker);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntry-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref><sp/>=<sp/>startEntry;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(newEntry);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="vehicles_8h_1a174dc3757d7fd308d7824673d9a3849d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vehicles_8c_1a174dc3757d7fd308d7824673d9a3849d" kindref="member">listVehicles</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startEntry<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Nao<sp/>ha<sp/>veiculos<sp/>guardados\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Lista<sp/>de<sp/>veiculos!\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(startEntry<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Id:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nMarca:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a19d9312fa6559481585c37eec00fdccf" kindref="member">brand</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nModelo:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a407e8645b05b8866c6aae96539051b4d" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nCapacidade<sp/>de<sp/>bateria<sp/>(Ah):<sp/>%.2f&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a43a6e4be8d45c1a00a55a11d095c0399" kindref="member">batteryCapacity</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nBateria<sp/>atual<sp/>(%%):<sp/>%d%%&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1aa0fb27feb593e8a6f2c20fa92b2466cf" kindref="member">currentBattery</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nAutonomia<sp/>(Km):<sp/>%.2f&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a83cda76233a2b02dcc2b3707fa58e4e8" kindref="member">autonomy</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nPreco<sp/>de<sp/>aluguer<sp/>(eur):<sp/>%.2f<sp/>euros&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a500426aec97889b7572f25ae45c06a8d" kindref="member">price</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nLocalizacao<sp/>do<sp/>veiculo:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a28e6925eca319a182388b4d560d9026b" kindref="member">gpsTracker</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startEntry<sp/>=<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="vehicles_8h_1a939e86a429faf7c0c7bf1647c19dd517" refkind="member"><highlight class="normal"><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*<ref refid="vehicles_8c_1a939e86a429faf7c0c7bf1647c19dd517" kindref="member">deleteVehicle</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*previousEntry=startEntry,<sp/>*currentEntry=startEntry,<sp/>*aux;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEntry==NULL)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nO<sp/>veiculo<sp/>indicado<sp/>nao<sp/>esta<sp/>registado!\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEntry-&gt;id<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux<sp/>=<sp/>currentEntry-&gt;nextEntry;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(currentEntry);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(aux);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((currentEntry!=NULL)&amp;&amp;(currentEntry-&gt;id!=</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previousEntry<sp/>=<sp/>currentEntry;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentEntry<sp/>=<sp/>currentEntry-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEntry!=NULL)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previousEntry-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref><sp/>=<sp/>currentEntry-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(currentEntry);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(startEntry);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nO<sp/>veiculo<sp/>indicado<sp/>nao<sp/>esta<sp/>registado!\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(startEntry);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="vehicles_8h_1ab7ce1ccb88e5738a39431b0b7cd64f8d" refkind="member"><highlight class="normal"><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*<ref refid="vehicles_8c_1ab7ce1ccb88e5738a39431b0b7cd64f8d" kindref="member">editVehicle</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentBattery,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>gpsTracker[]){</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*previousEntry=startEntry,<sp/>*currentEntry=startEntry;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEntry==NULL)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nO<sp/>veiculo<sp/>indicado<sp/>nao<sp/>esta<sp/>registado!\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(NULL);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((currentEntry!=NULL)&amp;&amp;(currentEntry-&gt;id!=</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previousEntry<sp/>=<sp/>currentEntry;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentEntry<sp/>=<sp/>currentEntry-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEntry!=NULL)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentEntry-&gt;<ref refid="struct_vehicle_list_1aa0fb27feb593e8a6f2c20fa92b2466cf" kindref="member">currentBattery</ref><sp/>=<sp/>currentBattery;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(currentEntry-&gt;gpsTracker,<sp/>gpsTracker);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(startEntry);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nO<sp/>veiculo<sp/>indicado<sp/>nao<sp/>esta<sp/>registado!\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(startEntry);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="vehicles_8h_1a32c74cac04f5218a5d7eb479fb262f5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vehicles_8c_1a32c74cac04f5218a5d7eb479fb262f5b" kindref="member">saveVehiclesOnDatabase</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref>*<sp/>aux<sp/>=<sp/>startEntry;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>fp;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;../databases/vehicles_database.txt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp==NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(aux<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(fp,</highlight><highlight class="stringliteral">&quot;Id:%d;BatteryCap:%.2f;CurrBattery:%d;Autonomy:%.2f;Price:%.2f;Brand:%s;Model:%s;GPS:%s;\n&quot;</highlight><highlight class="normal">,<sp/>aux-&gt;<ref refid="struct_vehicle_list_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>,<sp/>aux-&gt;<ref refid="struct_vehicle_list_1a43a6e4be8d45c1a00a55a11d095c0399" kindref="member">batteryCapacity</ref>,<sp/>aux-&gt;<ref refid="struct_vehicle_list_1aa0fb27feb593e8a6f2c20fa92b2466cf" kindref="member">currentBattery</ref>,<sp/>aux-&gt;<ref refid="struct_vehicle_list_1a83cda76233a2b02dcc2b3707fa58e4e8" kindref="member">autonomy</ref>,<sp/>aux-&gt;<ref refid="struct_vehicle_list_1a500426aec97889b7572f25ae45c06a8d" kindref="member">price</ref>,<sp/>aux-&gt;<ref refid="struct_vehicle_list_1a19d9312fa6559481585c37eec00fdccf" kindref="member">brand</ref>,<sp/>aux-&gt;<ref refid="struct_vehicle_list_1a407e8645b05b8866c6aae96539051b4d" kindref="member">model</ref>,<sp/>aux-&gt;<ref refid="struct_vehicle_list_1a28e6925eca319a182388b4d560d9026b" kindref="member">gpsTracker</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux<sp/>=<sp/>aux-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="vehicles_8h_1a5dae4b1b97ace920cd7262c20c3a9a41" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vehicles_8c_1a5dae4b1b97ace920cd7262c20c3a9a41" kindref="member">saveVehiclesOnBinaryDatabase</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref>*<sp/>aux<sp/>=<sp/>startEntry;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>fp;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;../databases/vehicles_database.bin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(aux<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;aux-&gt;<ref refid="struct_vehicle_list_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;aux-&gt;<ref refid="struct_vehicle_list_1a43a6e4be8d45c1a00a55a11d095c0399" kindref="member">batteryCapacity</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;aux-&gt;<ref refid="struct_vehicle_list_1aa0fb27feb593e8a6f2c20fa92b2466cf" kindref="member">currentBattery</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;aux-&gt;<ref refid="struct_vehicle_list_1a83cda76233a2b02dcc2b3707fa58e4e8" kindref="member">autonomy</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;aux-&gt;<ref refid="struct_vehicle_list_1a500426aec97889b7572f25ae45c06a8d" kindref="member">price</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(aux-&gt;<ref refid="struct_vehicle_list_1a19d9312fa6559481585c37eec00fdccf" kindref="member">brand</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>strlen(aux-&gt;<ref refid="struct_vehicle_list_1a19d9312fa6559481585c37eec00fdccf" kindref="member">brand</ref>)<sp/>+<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(aux-&gt;<ref refid="struct_vehicle_list_1a407e8645b05b8866c6aae96539051b4d" kindref="member">model</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>strlen(aux-&gt;<ref refid="struct_vehicle_list_1a407e8645b05b8866c6aae96539051b4d" kindref="member">model</ref>)<sp/>+<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(aux-&gt;<ref refid="struct_vehicle_list_1a28e6925eca319a182388b4d560d9026b" kindref="member">gpsTracker</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">),<sp/>strlen(aux-&gt;<ref refid="struct_vehicle_list_1a28e6925eca319a182388b4d560d9026b" kindref="member">gpsTracker</ref>)<sp/>+<sp/>1,<sp/>fp);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aux<sp/>=<sp/>aux-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="vehicles_8h_1a369c63f2109ee2575ac9d4417b3c40ea" refkind="member"><highlight class="normal"><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*<ref refid="vehicles_8c_1a369c63f2109ee2575ac9d4417b3c40ea" kindref="member">getVehiclesFromDatabase</ref>(){</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*vehicles<sp/>=<sp/>NULL,<sp/>*stack<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id,<sp/>currentBattery;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>batteryCapacity,<sp/>autonomy,<sp/>price;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>brand[20],<sp/>model[20],<sp/>gpsTracker[50];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;../databases/vehicles_database.txt&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vehicles;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="global_8h_1ae7f7fdd55d053ad019b98ea0bd1001f6" kindref="member">isFileEmpty</ref>(</highlight><highlight class="stringliteral">&quot;../databases/vehicles_database.txt&quot;</highlight><highlight class="normal">)<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vehicles;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!feof(fp))<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fscanf(fp,</highlight><highlight class="stringliteral">&quot;Id:%d;BatteryCap:%f;CurrBattery:%d;Autonomy:%f;Price:%f;Brand:%[^;];Model:%[^;];GPS:%[^;\n];\n&quot;</highlight><highlight class="normal">,<sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;batteryCapacity,<sp/>&amp;currentBattery,<sp/>&amp;autonomy,<sp/>&amp;price,<sp/>brand,<sp/>model,<sp/>gpsTracker);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack<sp/>=<sp/><ref refid="vehicles_8c_1a95c50728b4b1feefc4267c588c6f4122" kindref="member">addVehicles</ref>(stack,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>batteryCapacity,<sp/>currentBattery,<sp/>autonomy,<sp/>price,<sp/>brand,<sp/>model,<sp/>gpsTracker);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(stack<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vehicles<sp/>=<sp/><ref refid="vehicles_8c_1a95c50728b4b1feefc4267c588c6f4122" kindref="member">addVehicles</ref>(vehicles,<sp/>stack-&gt;<ref refid="struct_vehicle_list_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>,<sp/>stack-&gt;batteryCapacity,<sp/>stack-&gt;currentBattery,<sp/>stack-&gt;autonomy,<sp/>stack-&gt;price,<sp/>stack-&gt;brand,<sp/>stack-&gt;model,<sp/>stack-&gt;gpsTracker);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack<sp/>=<sp/>stack-&gt;nextEntry;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(vehicles);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="vehicles_8h_1a97e391b18841c2f4a9cd3fd39807d16a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vehicles_8c_1a97e391b18841c2f4a9cd3fd39807d16a" kindref="member">listVehiclesByAutnonomy</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startEntry<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Nao<sp/>ha<sp/>veiculos<sp/>guardados\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>**array<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*current<sp/>=<sp/>startEntry;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array<sp/>=<sp/>realloc(array,<sp/>count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[count<sp/>-<sp/>1]<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count<sp/>-<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>count;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[i]-&gt;autonomy<sp/>&lt;<sp/>array[j]-&gt;autonomy)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*temp<sp/>=<sp/>array[i];</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[i]<sp/>=<sp/>array[j];</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[j]<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Lista<sp/>de<sp/>veiculos<sp/>por<sp/>autonomia!\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*vehicle<sp/>=<sp/>array[i];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Id:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>vehicle-&gt;<ref refid="struct_vehicle_list_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Marca:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>vehicle-&gt;<ref refid="struct_vehicle_list_1a19d9312fa6559481585c37eec00fdccf" kindref="member">brand</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Modelo:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>vehicle-&gt;<ref refid="struct_vehicle_list_1a407e8645b05b8866c6aae96539051b4d" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Capacidade<sp/>de<sp/>bateria<sp/>(Ah):<sp/>%.2f\n&quot;</highlight><highlight class="normal">,<sp/>vehicle-&gt;<ref refid="struct_vehicle_list_1a43a6e4be8d45c1a00a55a11d095c0399" kindref="member">batteryCapacity</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Bateria<sp/>atual<sp/>(%%):<sp/>%d%%\n&quot;</highlight><highlight class="normal">,<sp/>vehicle-&gt;<ref refid="struct_vehicle_list_1aa0fb27feb593e8a6f2c20fa92b2466cf" kindref="member">currentBattery</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Autonomia<sp/>(Km):<sp/>%.2f\n&quot;</highlight><highlight class="normal">,<sp/>vehicle-&gt;<ref refid="struct_vehicle_list_1a83cda76233a2b02dcc2b3707fa58e4e8" kindref="member">autonomy</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Preco<sp/>de<sp/>aluguer<sp/>(eur):<sp/>%.2f<sp/>euros\n&quot;</highlight><highlight class="normal">,<sp/>vehicle-&gt;<ref refid="struct_vehicle_list_1a500426aec97889b7572f25ae45c06a8d" kindref="member">price</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Localizacao<sp/>do<sp/>veiculo:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>vehicle-&gt;<ref refid="struct_vehicle_list_1a28e6925eca319a182388b4d560d9026b" kindref="member">gpsTracker</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>free(array);</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="vehicles_8h_1a9687b1204b533bfc36593703b2fd1785" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vehicles_8c_1a9687b1204b533bfc36593703b2fd1785" kindref="member">listVehiclesByGPS</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>location[]){</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startEntry<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Nao<sp/>ha<sp/>veiculos<sp/>guardados\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Lista<sp/>de<sp/>veiculos<sp/>na<sp/>area<sp/>%s!\n\n&quot;</highlight><highlight class="normal">,<sp/>location);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(startEntry<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(startEntry-&gt;<ref refid="struct_vehicle_list_1a28e6925eca319a182388b4d560d9026b" kindref="member">gpsTracker</ref>,<sp/>location)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Id:<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nMarca:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a19d9312fa6559481585c37eec00fdccf" kindref="member">brand</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nModelo:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a407e8645b05b8866c6aae96539051b4d" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nCapacidade<sp/>de<sp/>bateria<sp/>(Ah):<sp/>%.2f&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a43a6e4be8d45c1a00a55a11d095c0399" kindref="member">batteryCapacity</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nBateria<sp/>atual<sp/>(%%):<sp/>%d%%&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1aa0fb27feb593e8a6f2c20fa92b2466cf" kindref="member">currentBattery</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nAutonomia<sp/>(Km):<sp/>%.2f&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a83cda76233a2b02dcc2b3707fa58e4e8" kindref="member">autonomy</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nPreco<sp/>de<sp/>aluguer<sp/>(eur):<sp/>%.2f<sp/>euros&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a500426aec97889b7572f25ae45c06a8d" kindref="member">price</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nLocalizacao<sp/>do<sp/>veiculo:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a28e6925eca319a182388b4d560d9026b" kindref="member">gpsTracker</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startEntry<sp/>=<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="vehicles_8h_1a8c8d5c19871b6a26547394e61e49264f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="vehicles_8c_1a8c8d5c19871b6a26547394e61e49264f" kindref="member">getVehicleByID</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(startEntry<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startEntry-&gt;<ref refid="struct_vehicle_list_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref><sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="global_8h_1a3e96a5e238530b20be201de161da2059" kindref="member">car</ref>.<ref refid="struct_car_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref><sp/>=<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="global_8h_1a3e96a5e238530b20be201de161da2059" kindref="member">car</ref>.<ref refid="struct_car_1a43a6e4be8d45c1a00a55a11d095c0399" kindref="member">batteryCapacity</ref><sp/>=<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a43a6e4be8d45c1a00a55a11d095c0399" kindref="member">batteryCapacity</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="global_8h_1a3e96a5e238530b20be201de161da2059" kindref="member">car</ref>.<ref refid="struct_car_1aa0fb27feb593e8a6f2c20fa92b2466cf" kindref="member">currentBattery</ref><sp/>=<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1aa0fb27feb593e8a6f2c20fa92b2466cf" kindref="member">currentBattery</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="global_8h_1a3e96a5e238530b20be201de161da2059" kindref="member">car</ref>.<ref refid="struct_car_1a83cda76233a2b02dcc2b3707fa58e4e8" kindref="member">autonomy</ref><sp/>=<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a83cda76233a2b02dcc2b3707fa58e4e8" kindref="member">autonomy</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="global_8h_1a3e96a5e238530b20be201de161da2059" kindref="member">car</ref>.<ref refid="struct_car_1a500426aec97889b7572f25ae45c06a8d" kindref="member">price</ref><sp/>=<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a500426aec97889b7572f25ae45c06a8d" kindref="member">price</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<ref refid="global_8h_1a3e96a5e238530b20be201de161da2059" kindref="member">car</ref>.<ref refid="struct_car_1a19d9312fa6559481585c37eec00fdccf" kindref="member">brand</ref>,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a19d9312fa6559481585c37eec00fdccf" kindref="member">brand</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<ref refid="global_8h_1a3e96a5e238530b20be201de161da2059" kindref="member">car</ref>.<ref refid="struct_car_1a407e8645b05b8866c6aae96539051b4d" kindref="member">model</ref>,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a407e8645b05b8866c6aae96539051b4d" kindref="member">model</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<ref refid="global_8h_1a3e96a5e238530b20be201de161da2059" kindref="member">car</ref>.<ref refid="struct_car_1a28e6925eca319a182388b4d560d9026b" kindref="member">gpsTracker</ref>,<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a28e6925eca319a182388b4d560d9026b" kindref="member">gpsTracker</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startEntry<sp/>=<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="vehicles_8h_1ad531955832370c9ea477a920316b6442" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vehicles_8c_1ad531955832370c9ea477a920316b6442" kindref="member">vehicleExists</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(startEntry<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startEntry-&gt;<ref refid="struct_vehicle_list_1a7441ef0865bcb3db9b8064dd7375c1ea" kindref="member">id</ref><sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startEntry<sp/>=<sp/>startEntry-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="vehicles_8h_1a88357fa8f47cb44df355643537f88141" refkind="member"><highlight class="normal"><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*<ref refid="vehicles_8c_1a88357fa8f47cb44df355643537f88141" kindref="member">rechargeVehicles</ref>(<ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*startEntry){</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vehicle_list" kindref="compound">Vehicle</ref><sp/>*currentEntry<sp/>=<sp/>startEntry;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEntry<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nNao<sp/>ha<sp/>veiculos<sp/>registados!\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(currentEntry<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEntry-&gt;<ref refid="struct_vehicle_list_1aa0fb27feb593e8a6f2c20fa92b2466cf" kindref="member">currentBattery</ref><sp/>&lt;=<sp/>50)<sp/>currentEntry-&gt;<ref refid="struct_vehicle_list_1aa0fb27feb593e8a6f2c20fa92b2466cf" kindref="member">currentBattery</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentEntry<sp/>=<sp/>currentEntry-&gt;<ref refid="struct_vehicle_list_1a34e680d3d5ef10fc2c55e625aa74b5e9" kindref="member">nextEntry</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Todos<sp/>os<sp/>veiculos<sp/>com<sp/>bateria<sp/>&lt;=<sp/>a<sp/>50/100<sp/>foram<sp/>recarregados!\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>startEntry;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="sources/vehicles.c"/>
  </compounddef>
</doxygen>
