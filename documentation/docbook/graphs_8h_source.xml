<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_graphs_8h_source" xml:lang="en-US">
<title>graphs.h</title>
<indexterm><primary>headers/graphs.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_graphs_8h_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_graphs_8h_source_1l00002"/>00002 
<anchor xml:id="_graphs_8h_source_1l00003"/><link linkend="_struct_aux_list">00003</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_aux_list">AuxList</link>&#32;{
<anchor xml:id="_graphs_8h_source_1l00004"/><link linkend="_struct_aux_list_1a7441ef0865bcb3db9b8064dd7375c1ea">00004</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_aux_list_1a7441ef0865bcb3db9b8064dd7375c1ea">id</link>;
<anchor xml:id="_graphs_8h_source_1l00005"/><link linkend="_struct_aux_list_1a43a6e4be8d45c1a00a55a11d095c0399">00005</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_aux_list_1a43a6e4be8d45c1a00a55a11d095c0399">batteryCapacity</link>;
<anchor xml:id="_graphs_8h_source_1l00006"/><link linkend="_struct_aux_list_1aa0fb27feb593e8a6f2c20fa92b2466cf">00006</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_aux_list_1aa0fb27feb593e8a6f2c20fa92b2466cf">currentBattery</link>;
<anchor xml:id="_graphs_8h_source_1l00007"/><link linkend="_struct_aux_list_1a83cda76233a2b02dcc2b3707fa58e4e8">00007</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_aux_list_1a83cda76233a2b02dcc2b3707fa58e4e8">autonomy</link>;
<anchor xml:id="_graphs_8h_source_1l00008"/><link linkend="_struct_aux_list_1a500426aec97889b7572f25ae45c06a8d">00008</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_aux_list_1a500426aec97889b7572f25ae45c06a8d">price</link>;
<anchor xml:id="_graphs_8h_source_1l00009"/><link linkend="_struct_aux_list_1a19d9312fa6559481585c37eec00fdccf">00009</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_aux_list_1a19d9312fa6559481585c37eec00fdccf">brand</link>[20];
<anchor xml:id="_graphs_8h_source_1l00010"/><link linkend="_struct_aux_list_1a407e8645b05b8866c6aae96539051b4d">00010</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_aux_list_1a407e8645b05b8866c6aae96539051b4d">model</link>[20];
<anchor xml:id="_graphs_8h_source_1l00011"/><link linkend="_struct_aux_list_1a28e6925eca319a182388b4d560d9026b">00011</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_struct_aux_list_1a28e6925eca319a182388b4d560d9026b">gpsTracker</link>[50];
<anchor xml:id="_graphs_8h_source_1l00012"/><link linkend="_struct_aux_list_1ae0cb185ade32e7edefa337ba3cc1fbcf">00012</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_aux_list">AuxList</link>*&#32;<link linkend="_struct_aux_list_1ae0cb185ade32e7edefa337ba3cc1fbcf">nextEntry</link>;
<anchor xml:id="_graphs_8h_source_1l00013"/><link linkend="_graphs_8h_1ae9ab6ee0d1c8faaa44a414ee96431039">00013</link> }&#32;<link linkend="_graphs_8h_1ae9ab6ee0d1c8faaa44a414ee96431039">Aux</link>;
<anchor xml:id="_graphs_8h_source_1l00014"/>00014 
<anchor xml:id="_graphs_8h_source_1l00015"/><link linkend="_struct_edge_list">00015</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_edge_list">EdgeList</link>&#32;{
<anchor xml:id="_graphs_8h_source_1l00016"/><link linkend="_struct_edge_list_1a7441ef0865bcb3db9b8064dd7375c1ea">00016</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_edge_list_1a7441ef0865bcb3db9b8064dd7375c1ea">id</link>;
<anchor xml:id="_graphs_8h_source_1l00017"/><link linkend="_struct_edge_list_1aff105884864d9eb93769b4323f180562">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_edge_list_1aff105884864d9eb93769b4323f180562">vertexA</link>;
<anchor xml:id="_graphs_8h_source_1l00018"/><link linkend="_struct_edge_list_1a8af3b87d94b267ef0e237180b1ab5c8b">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_edge_list_1a8af3b87d94b267ef0e237180b1ab5c8b">vertexB</link>;
<anchor xml:id="_graphs_8h_source_1l00019"/><link linkend="_struct_edge_list_1a06f14a9abd47b91465f895d5259cdc1b">00019</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_struct_edge_list_1a06f14a9abd47b91465f895d5259cdc1b">distance</link>;
<anchor xml:id="_graphs_8h_source_1l00020"/><link linkend="_struct_edge_list_1a1b8105521e3a6a5e9f85c915e3746581">00020</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_edge_list">EdgeList</link>*&#32;<link linkend="_struct_edge_list_1a1b8105521e3a6a5e9f85c915e3746581">nextEntry</link>;
<anchor xml:id="_graphs_8h_source_1l00021"/><link linkend="_graphs_8h_1a1e1861e76bc30ba26d89c654b520ae16">00021</link> }&#32;<link linkend="_graphs_8h_1a1e1861e76bc30ba26d89c654b520ae16">Edge</link>;
<anchor xml:id="_graphs_8h_source_1l00022"/>00022 
<anchor xml:id="_graphs_8h_source_1l00023"/><link linkend="_struct_graph_list">00023</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_graph_list">GraphList</link>&#32;{
<anchor xml:id="_graphs_8h_source_1l00024"/><link linkend="_struct_graph_list_1a7b6a73a9ea2850e455702ad082701c9d">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_graph_list_1a7b6a73a9ea2850e455702ad082701c9d">vertex</link>;
<anchor xml:id="_graphs_8h_source_1l00025"/><link linkend="_struct_graph_list_1a5095800e7feb0f0af9903d03529c8b72">00025</link> &#32;&#32;&#32;&#32;<link linkend="_struct_aux_list">Aux</link>&#32;<link linkend="_struct_graph_list_1a5095800e7feb0f0af9903d03529c8b72">vehicle</link>;
<anchor xml:id="_graphs_8h_source_1l00026"/><link linkend="_struct_graph_list_1a4d8765cd8f9ea719658270501587af37">00026</link> &#32;&#32;&#32;&#32;<link linkend="_struct_edge_list">Edge</link>*&#32;<link linkend="_struct_graph_list_1a4d8765cd8f9ea719658270501587af37">edge</link>;
<anchor xml:id="_graphs_8h_source_1l00027"/><link linkend="_struct_graph_list_1adb45c91a9338152d0e202d886d30d001">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_graph_list">GraphList</link>*&#32;<link linkend="_struct_graph_list_1adb45c91a9338152d0e202d886d30d001">nextEntry</link>;
<anchor xml:id="_graphs_8h_source_1l00028"/><link linkend="_graphs_8h_1af8faa00bf97d63050ab962a459d43e1c">00028</link> }&#32;<link linkend="_graphs_8h_1af8faa00bf97d63050ab962a459d43e1c">Graph</link>;
<anchor xml:id="_graphs_8h_source_1l00029"/>00029 
<anchor xml:id="_graphs_8h_source_1l00030"/>00030 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_graphs_8h_1af94b6595ac77246b48a3f03fe146a6d3">isGraphUnique</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*startEntry,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_graphs_8h_source_1l00031"/>00031 <link linkend="_struct_graph_list">Graph</link>&#32;*<link linkend="_graphs_8h_1ae350462ced1dc7ba74592037e3c9d88d">addVertex</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*startEntry,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>,&#32;<link linkend="_struct_aux_list">Aux</link>&#32;<link linkend="_struct_graph_list_1a5095800e7feb0f0af9903d03529c8b72">vehicle</link>);
<anchor xml:id="_graphs_8h_source_1l00032"/>00032 <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_graphs_8h_1a638753f6469282e3b39c8286813cfd34">generateRandomDistance</link>();
<anchor xml:id="_graphs_8h_source_1l00033"/>00033 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_graphs_8h_1adc3948acb11d8597092ee47d0a6e8f7c">doesVertexExist</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*graph,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_struct_graph_list_1a7b6a73a9ea2850e455702ad082701c9d">vertex</link>);
<anchor xml:id="_graphs_8h_source_1l00034"/>00034 <link linkend="_struct_edge_list">Edge</link>&#32;*<link linkend="_graphs_8h_1af72fe49941374d635aff9d7526fc7565">AddEdge</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*graph,&#32;<link linkend="_struct_edge_list">Edge</link>&#32;*startEntry,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startVertex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;endVertex);
<anchor xml:id="_graphs_8h_source_1l00035"/>00035 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_graphs_8h_1a3c2e0335cdd5b4448a77337f76c11022">isEdgePresent</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*graph,&#32;<link linkend="_struct_edge_list">Edge</link>&#32;*<link linkend="_struct_graph_list_1a4d8765cd8f9ea719658270501587af37">edge</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;vertexA,&#32;<emphasis role="keywordtype">int</emphasis>&#32;vertexB);
<anchor xml:id="_graphs_8h_source_1l00036"/>00036 <link linkend="_struct_edge_list">Edge</link>&#32;*<link linkend="_graphs_8h_1a0cb364c7e705c406ebe537678438911a">generateRandomGraph</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*graph,&#32;<link linkend="_struct_edge_list">Edge</link>&#32;*<link linkend="_struct_graph_list_1a4d8765cd8f9ea719658270501587af37">edge</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;numVertices,&#32;<emphasis role="keywordtype">int</emphasis>&#32;numEdges);
<anchor xml:id="_graphs_8h_source_1l00037"/>00037 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_graphs_8h_1a3ab9e14d9194e69df48f70def6d45370">listGraph</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*startEntry,&#32;<link linkend="_struct_edge_list">Edge</link>&#32;*startEdge);
<anchor xml:id="_graphs_8h_source_1l00038"/>00038 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_graphs_8h_1aae6d29c48d0d248e16014ef35b50a5ea">listZones</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*startEntry);
<anchor xml:id="_graphs_8h_source_1l00039"/>00039 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_graphs_8h_1a17abe0cb34456a08730810427bdcf20d">listVehiclesByZone</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*startEntry,&#32;<emphasis role="keywordtype">int</emphasis>&#32;zone);
<anchor xml:id="_graphs_8h_source_1l00040"/>00040 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_graphs_8h_1aa65bd12637311f31250ec4d793db7574">saveVerticesOnDatabase</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*startEntry);
<anchor xml:id="_graphs_8h_source_1l00041"/>00041 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_graphs_8h_1a860928daf7c19aa0b0a0ba64e780f8aa">saveVerticesOnBinaryDatabase</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*startEntry);
<anchor xml:id="_graphs_8h_source_1l00042"/>00042 <link linkend="_struct_graph_list">Graph</link>&#32;*<link linkend="_graphs_8h_1a7b16e36ae5b60ab0f6e1c6e8feaaf381">getVerticesFromDatabase</link>();
<anchor xml:id="_graphs_8h_source_1l00043"/>00043 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_graphs_8h_1a2ed81c359a9efd1ca6a593c2bf5c164a">getShortestPath</link>(<link linkend="_struct_graph_list">Graph</link>&#32;*startEntry,&#32;<link linkend="_struct_edge_list">Edge</link>&#32;*<link linkend="_struct_graph_list_1a4d8765cd8f9ea719658270501587af37">edge</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;startVertex,&#32;<emphasis role="keywordtype">int</emphasis>&#32;numOfVertices);
</programlisting></section>
